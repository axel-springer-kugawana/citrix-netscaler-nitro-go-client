package nitro

type {{$.Name|name}} struct {
        {{range $field, $type := $.Schema.Fields -}}
        {{if eq $type "double" -}}
        {{$field|title}} {{$type|go_type}} `json:"{{$field}},string,omitempty"`
        {{else -}}
        {{$field|title}} {{$type|go_type}} `json:"{{$field}},omitempty"`
        {{end -}}
        {{end -}}
}

type {{$.Name|name}}Key struct {
        {{range $field := $.Schema.Key -}}
        {{$field|title}} {{(index $.Schema.Fields $field)|go_type}}
        {{end -}}
}

func (c *NitroClient) Add{{$.Name|name}} (binding {{$.Name|name}}) error {
        return nil
}

func (c *NitroClient) List{{$.Name|name}} () ([]{{$.Name|name}}, error) {
        return nil, nil
}

func (c *NitroClient) Get{{$.Name|name}} (key {{$.Name|name}}Key) (*{{$.Name|name}}, error) {
        return nil, nil
}

func (c *NitroClient) Delete{{$.Name|name}} (key {{$.Name|name}}Key) error {
        return nil
}
