package resources

import (
	"github.com/doubret/citrix-netscaler-nitro-go-client/nitro"
	"testing"
)

func Setup_lbvserver(t *testing.T, client *nitro.NitroClient) (*nitro.Lbvserver, func()) {
	//resource := nitro.Lbvserver {
	//Name: "lbvserver",
	//Appflowlog: (ENABLED|DISABLED),
	//Authentication: (ON|OFF),
	//Authenticationhost: string,
	//Authn401: (ON|OFF),
	//Authnprofile: string,
	//Authnvsname: string,
	//Backuplbmethod: (ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|SOURCEIPHASH|LEASTBANDWIDTH|LEASTPACKETS|CUSTOMLOAD),
	//Backuppersistencetimeout: int,
	//Backupvserver: string,
	//Bypassaaaa: (YES|NO),
	//Cacheable: (YES|NO),
	//Clttimeout: double,
	//Comment: string,
	//Connfailover: (DISABLED|STATEFUL|STATELESS),
	//Cookiename: string,
	//Datalength: double,
	//Dataoffset: double,
	//Dbprofilename: dbdbprofile.name,
	//Dbslb: (ENABLED|DISABLED),
	//Disableprimaryondown: (ENABLED|DISABLED),
	//Dns64: (ENABLED|DISABLED),
	//Dnsprofilename: dnsprofile.dnsprofilename,
	//Downstateflush: (ENABLED|DISABLED),
	//Hashlength: double,
	//Healththreshold: double,
	//Httpprofilename: nshttpprofile.name,
	//Httpsredirecturl: string,
	//Icmpvsrresponse: (PASSIVE|ACTIVE),
	//Insertvserveripport: (OFF|VIPADDR|V6TOV4MAPPING),
	//Ipmask: ip_mask,
	//Ippattern: ip,
	//Ipv46: ip,
	//L2conn: (ON|OFF),
	//Lbmethod: (ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|URLHASH|DOMAINHASH|DESTINATIONIPHASH|SOURCEIPHASH|SRCIPDESTIPHASH|LEASTBANDWIDTH|LEASTPACKETS|TOKEN|SRCIPSRCPORTHASH|LRTM|CALLIDHASH|CUSTOMLOAD|LEASTREQUEST|AUDITLOGHASH|STATICPROXIMITY|USER_TOKEN),
	//Lbprofilename: lbprofile.lbprofilename,
	//Listenpolicy: string,
	//Listenpriority: double,
	//M: (IP|MAC|IPTUNNEL|TOS),
	//Macmoderetainvlan: (ENABLED|DISABLED),
	//Maxautoscalemembers: double,
	//Minautoscalemembers: double,
	//Mssqlserverversion: (70|2000|2000SP1|2005|2008|2008R2|2012|2014),
	//Mysqlcharacterset: double,
	//Mysqlprotocolversion: double,
	//Mysqlservercapabilities: double,
	//Mysqlserverversion: string,
	//Netmask: ip_mask,
	//Netprofile: netprofile.name,
	//Newservicerequest: double,
	//Newservicerequestincrementinterval: double,
	//Newservicerequestunit: (PER_SECOND|PERCENT),
	//Oracleserverversion: (10G|11G),
	//Persistavpno: double[],
	//Persistencebackup: (SOURCEIP|NONE),
	//Persistencetype: (SOURCEIP|COOKIEINSERT|SSLSESSION|RULE|URLPASSIVE|CUSTOMSERVERID|DESTIP|SRCIPDESTIP|CALLID|RTSPSID|DIAMETER|FIXSESSION|USERSESSION|NONE),
	//Persistmask: string,
	//Port: int,
	//Pq: (ON|OFF),
	//Processlocal: (ENABLED|DISABLED),
	//Push: (ENABLED|DISABLED),
	//Pushlabel: string,
	//Pushmulticlients: (YES|NO),
	//Pushvserver: string,
	//Range: double,
	//Recursionavailable: (YES|NO),
	//Redirectfromport: int,
	//Redirectportrewrite: (ENABLED|DISABLED),
	//Redirurl: string,
	//Resrule: string,
	//Retainconnectionsoncluster: (YES|NO),
	//Rhistate: (PASSIVE|ACTIVE),
	//Rtspnat: (ON|OFF),
	//Rule: string,
	//Sc: (ON|OFF),
	//Servicetype: (HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|DTLS|NNTP|DNS|DHCPRA|ANY|SIP_UDP|SIP_TCP|SIP_SSL|DNS_TCP|RTSP|PUSH|SSL_PUSH|RADIUS|RDP|MYSQL|MSSQL|DIAMETER|SSL_DIAMETER|TFTP|ORACLE|SMPP|SYSLOGTCP|SYSLOGUDP|FIX|SSL_FIX|USER_TCP|USER_SSL_TCP),
	//Sessionless: (ENABLED|DISABLED),
	//Skippersistency: (Bypass|ReLb|None),
	//Sobackupaction: (DROP|ACCEPT|REDIRECT),
	//Somethod: (CONNECTION|DYNAMICCONNECTION|BANDWIDTH|HEALTH|NONE),
	//Sopersistence: (ENABLED|DISABLED),
	//Sopersistencetimeout: double,
	//Sothreshold: double,
	//Tcpprofilename: nstcpprofile.name,
	//Td: double,
	//Timeout: int,
	//Tosid: double,
	//Trofspersistence: (ENABLED|DISABLED),
	//V6netmasklen: double,
	//V6persistmasklen: double,
	//Vipheader: string,
	//}

	return nil, func() {
	}
}
